/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jl.historiapp.vista;

import com.jl.historia.entidad.Historia;
import com.jl.historia.entidad.Paciente;
import com.jl.historiapp.controlador.HistoriaControlador;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author famleto
 */
public class ListarHistorias extends javax.swing.JFrame {

    private CRUDHistoria crudHistoria;
    private HistoriaControlador historiaControlador = new HistoriaControlador();
    private int idPaciente;
    String codigoHistoria = "";
    DefaultTableModel modelo;

    public ListarHistorias(CRUDHistoria crudHistoria) {
        initComponents();
        this.crudHistoria = crudHistoria;
        modelo = (DefaultTableModel) tblHistoria.getModel();
        Object[] rowData = new Object[5];
        List<Historia> historias = historiaControlador.listarHistorias();

        for (int i = 0; i < historias.size(); i++) {
            rowData[0] = historias.get(i).getPacienteId().getId();
            rowData[1] = historias.get(i).getCodigoHistoria();
            rowData[2] = historias.get(i).getMotivo();
            rowData[3] = historias.get(i).getEnfermedadActual();
            rowData[4] = historias.get(i).getDiagnostico();

            modelo.addRow(rowData);
        }
        tblHistoria.getColumnModel().getColumn(0).setMinWidth(0);
        tblHistoria.getColumnModel().getColumn(0).setMaxWidth(0);
        tblHistoria.getColumnModel().getColumn(0).setWidth(0);

    }

    public ListarHistorias() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistoria = new javax.swing.JTable();
        btnSeleccionar = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tblHistoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdPaciente", "Codigo Historia", "Motivo", "Enfermedad Actual", "Diagnostico"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHistoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHistoriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHistoria);

        btnSeleccionar.setText("Seleccionar");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
        });

        jLabel1.setText("CÃ³digo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(247, 247, 247)
                                .addComponent(btnSeleccionar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(161, 161, 161)
                                .addComponent(jLabel1)
                                .addGap(35, 35, 35)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSeleccionar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblHistoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHistoriaMouseClicked
        JTable tabla = (JTable) evt.getSource();
        int fila = tabla.getSelectedRow();
        int columna = 0;
        idPaciente = Integer.valueOf(tblHistoria.getModel().getValueAt(fila, columna).toString());

    }//GEN-LAST:event_tblHistoriaMouseClicked

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        if (this.crudHistoria.transaccion < 3) {
            this.crudHistoria.llenarDatosHistoriaPorPaciente(idPaciente);
            this.dispose();
        } else if(this.crudHistoria.transaccion==3){
            Paciente paciente = new Paciente();
            paciente.setId(idPaciente);
            Historia historia = historiaControlador.mostrarDatosHistoriaPorPaciente(paciente);
            historiaControlador.eliminarHistoria(historia);
            modelo.setRowCount(0);
            modelo = (DefaultTableModel) tblHistoria.getModel();
            Object[] rowData = new Object[5];
            List<Historia> historias = historiaControlador.listarHistorias();

            for (int i = 0; i < historias.size(); i++) {
                rowData[0] = historias.get(i).getPacienteId().getId();
                rowData[1] = historias.get(i).getCodigoHistoria();
                rowData[2] = historias.get(i).getMotivo();
                rowData[3] = historias.get(i).getEnfermedadActual();
                rowData[4] = historias.get(i).getDiagnostico();

                modelo.addRow(rowData);
            }
            tblHistoria.getColumnModel().getColumn(0).setMinWidth(0);
            tblHistoria.getColumnModel().getColumn(0).setMaxWidth(0);
            tblHistoria.getColumnModel().getColumn(0).setWidth(0);

        }else{
             this.crudHistoria.llenarDatosHistoriaPorPaciente(idPaciente);
             this.crudHistoria.configurarControles(false);
            this.dispose();
        }
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.crudHistoria.configurarControles(false);
    }//GEN-LAST:event_formWindowClosing

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed

        codigoHistoria = txtCodigo.getText();
        List<Historia> historias = historiaControlador.buscarHistoriaPorCodigo(codigoHistoria);

        modelo = (DefaultTableModel) this.tblHistoria.getModel();
        modelo.setRowCount(0);
        Object[] filadata = new Object[5];
        for (Historia historia : historias) {
            filadata[0] = historia.getPacienteId().getId();
            filadata[1] = historia.getCodigoHistoria();
            filadata[2] = historia.getMotivo();
            filadata[3] = historia.getEnfermedadActual();
            filadata[4] = historia.getDiagnostico();
            modelo.addRow(filadata);
        }
    }//GEN-LAST:event_txtCodigoKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarHistorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarHistorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarHistorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarHistorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListarHistorias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHistoria;
    private javax.swing.JTextField txtCodigo;
    // End of variables declaration//GEN-END:variables
}
